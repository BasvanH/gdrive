name: Build and upload release (linux arm 32bit)

on:
  release:
    types: [created]

env:
  APP_NAME: gdrive
  ARCHIVE_NAME: gdrive_linux-arm.tar.gz
  RING_FORCE_BUILD_RS: "1"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Prepare upload URL
        run: |
          UPLOAD_URL="$(jq -r '.release.upload_url' "$GITHUB_EVENT_PATH" | sed -e "s/{?name,label}$/?name=${ARCHIVE_NAME}/")"
          echo "UPLOAD_URL=$UPLOAD_URL" >> $GITHUB_ENV

      - name: Install cross-compilation toolchain
        run: |
          sudo apt update
          sudo apt install -y gcc-9-arm-linux-gnueabihf libc6-armhf-cross libc6-dev-armhf-cross clang lld

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          target: armv7-unknown-linux-gnueabihf

      - name: Set environment variables for linker
        run: |
          echo "CC=arm-linux-gnueabihf-gcc" >> $GITHUB_ENV
          echo "AR=arm-linux-gnueabihf-ar" >> $GITHUB_ENV
          echo "CARGO_CFG_TARGET_FEATURE=+v7,+vfp3" >> $GITHUB_ENV
          echo "RING_FORCE_BUILD_RS=1" >> $GITHUB_ENV

      - name: Ensure correct dependency versions
        run: |
          cargo update -p ring --precise 0.16.20
          cargo update -p rustls --precise 0.20.7
          cargo update -p hyper-rustls --precise 0.23.2

      - name: Build application
        run: |
          cargo clean
          cargo build --release --target=armv7-unknown-linux-gnueabihf

      - name: Verify linked glibc version
        run: |
          arm-linux-gnueabihf-readelf -a target/armv7-unknown-linux-gnueabihf/release/$APP_NAME | grep 'GLIBC_'

      - name: Create archive
        run: |
          tar -czf $ARCHIVE_NAME -C target/armv7-unknown-linux-gnueabihf/release $APP_NAME

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ env.ARCHIVE_NAME }}
          asset_name: ${{ env.ARCHIVE_NAME }}
          asset_content_type: application/gzip
